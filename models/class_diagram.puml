@startuml

title MOD4B - Class Diagram

package application {

  class MainApplication {
    --
    + main(args: String[]): void
    - initialiseSimulationHours(): SimulationHour[24]
    - generateRandomNumberRequest(int maximum): int
    - generateRandomRequest(): Request
    + startSimulation(userInput: Scanner, simulationHours: SimulationHour[24])
  }
    
  class Simulation {
    - simulationHours: SimulationHour[24]
    - nbDeadPassengers: int
    - runways: Runway[8]
    - waitingPlanes: ArrayList<Plane>
    --
    + Simulation(userInput: Scanner, simulationHours: SimulationHour)
  }
  
  package features {
  
    class SimulationHour {
        - currentHour: int
        - requests: ArrayList<Request>
        --
        + startRequest(request: Request): void
        + hourSummary(): String
    }
  
    class Runway {
      - occupied: Boolean
      - holderPlane: Plane
      --
      + planeLand(Plane plane): void
      + decreasePlaneHoursRunwayNeeded(): void
      + displayRunway(): String
      - checkPlaneFuelLevel(): void
      - planeLeave(): void
    }

    class Plane {
        - name: String
        - hoursFuelLeft: int
        - hoursRunwayNeeded: int
        - nbPassengers: int
        --
        + displayPlane(): String
    }

  }

  package menus {
    
    abstract Menu {
      - simulationData: Simulation
      --
      + Menu(simulation: Simulation)
      {abstract} + goToMenu(Menu menu): void
      {abstract} + displayMenu(): String
    }

    class MainMenu extends Menu {
      - simulationData: Simulation
      --
      + MainMenu(simulation: Simulation)
      + advanceHour(): void
      + goToMenu(Menu menu): void
      + displayMenu(): String
    }

    class RunwayMenu extends Menu {
        - simulationData: Simulation
        --
        + RunwayMenu(simulation: Simulation)
        + goToMenu(Menu menu): void
        + displayMenu(): String
    }

    class WaitingPlanesMenu extends Menu {
        - simulationData: Simulation
        --
        + WaitingPlanesMenu(simulation: Simulation)
        + goToMenu(Menu menu): void
        + displayMenu(): String
    }

    class AdvanceHourMenu extends Menu {
        - simulationData: Simulation
        --
        + AdvanceHourMenu(simulation: Simulation)
        + goToMenu(Menu menu): void
        + displayMenu(): String
    }

    class RequestMenu extends Menu {
        - simulationData: Simulation
        --
        + RequestMenu(simulation: Simulation)
        + goToMenu(Menu menu): void
        + displayMenu(): String
    }
  
  }  

  package requests {
    
    abstract Request {
      {abstract} - RARITY: Double
      {abstract} - TITLE: String
      {abstract} - DESCRIPTION: String
      {abstract} - OPTIONS: Option[]
    }
        
    abstract Landing extends Request {
       {abstract} - plane: Plane
      - OPTIONS: Option[] = ...
    }

    class PlaneLanding extends Landing {
      - plane: Plane
      - RARITY: Double = 0.40
      - TITLE: String = "Plane Landing"
      - DESCRIPTION: String = ...
    }

    class EmergencyLanding extends Landing {
      - plane: Plane
      - RARITY: Double = 0.05
      - TITLE: String = "Emergency landing"
      - DESCRIPTION: String = ...
    }

    class FundingEvent extends Request {
      - RARITY: Double = 0.10
      - TITLE: String = "Funding Event"
      - DESCRIPTION: String = ...
      - OPTIONS: Option[] = ...
    }

    class JumboJet extends Landing {
      - plane: Plane
      - RARITY: Double = 0.15
      - TITLE: String = "Jumbo jet"
      - DESCRIPTION: String = ...
    }

    class BadWeather extends Request {
      - RARITY: Double = 0.10
      - TITLE: String = "Bad Weather"
      - DESCRIPTION: String = ...
      - OPTIONS: Option[] = ...
    }

    class SnakesOnThePlane extends Request {
      - RARITY: Double = 0.10
      - TITLE: String = "Snakes on the plane"
      - DESCRIPTION: String = ...
      - OPTIONS: Option[] = ...
    }

    class Protests extends Request {
      - RARITY: Double = 0.05
      - TITLE: String = "Protests"
      - DESCRIPTION: String = ...
      - OPTIONS: Option[] = ...
    }

    class JohnMcClain extends Request {
      - RARITY: Double = 0.05
      - TITLE: String = "John McClain"
      - DESCRIPTION: String = ...
      - OPTIONS: Option[] = ...
    }
  }
  
  package options {
  
    abstract Option {
      {abstract} - description: String
      --
      {abstract} + checkRequirement(): Boolean
      {abstract} + applyConsequence(): void
      {abstract} + displayOption(): String
    }
    
    class AllowLanding extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
    
    class PlaceOnStandby extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
    
    class EmptyRandomRunway extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
    
    class RescueTeam extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
    
    class AirRefueling extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
    
    class CrossWinds extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
    
    class IcyRunWays extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
    
    class IceStorm extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
    
    class LetThemLand extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
    
    class RefuseThem extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
    
    class AllowThemTheSpaceToProtest extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
    
    class GetPoliceInvolved extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
    
    class LetThePlanesLandAnyways extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
    
    class LockdownTheRunway extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
    
    class LetTheManGo extends Option {
      - description: String
      --
      + checkRequirement(): boolean
      + applyConsequence(): void
    }
  
  }

  MainApplication "1" *-- "1" Simulation
  MainApplication "1" *-- "24" SimulationHour
  Menu "5" -up-* "1" Simulation
  Request "1..3" -up-o "1" SimulationHour
  Request "1..*" o-- "2..*" Option
  Simulation "1" o-- "24" SimulationHour
  Simulation "1" o-- "8" Runway
  Simulation "1" o-- "*" Plane
  Runway "0..1" o-- "0..1" Plane

}

@enduml
