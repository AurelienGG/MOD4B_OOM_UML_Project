@startuml

title MOD4B - Class Diagram

package application {
    
  class Simulation {
    - hours: SimulationHour
    - passengers: int
    - runways: Runway[8]
  }
  
  package features {
    
    abstract GameTime {
      - hour: int
      --
      + timeFly(hour: int): void
    }
  
    class SimulationHour extends GameTime {
      --
      + timeFly(hour: int): void (time+=hour)
    }
  
    class OccupiedTimeRemaining extends GameTime {
      --
      + timeFly(hour: int): void (time-=hour)
    }
  
    class Runway {
      - occupantName: String
      - timeRemaining: OccupiedTimeRemaining
    }
  }
  
  

  package menu {
    
    interface Menu {
      --
      + displayCurrentHour(): void
      + displayCurrentPassengerKilledCount(): void
      + goToMenu(Menu menu): void
    }

    class Main implements Menu {
      --
      + advanceHour(): void
    }

    class Runway implements Menu {
    }

    class WaitingPlanes implements Menu {
    }

    class AdvanceHour implements Menu {
    }
  
  }  

  package request {
    
    interface Request {
      - rarity: Double
      - title: String
      - description: String
      - options: Option[] or ArrayList<Option>
    }
        
    abstract Landing implements Request {
    }

    class PlaneLanding implements Landing {
    }

    class EmergencyLanding implements Landing {
    }

    class FundingEvent implements Request {
    }

    class JumboJet implements Landing {
    }

    class BadWeather implements Request {
    }

    class SnakesOnThePlane implements Request {
    }

    class Protests implements Request {
    }

    class JohnMcClain implements Request {
    }
  }
  
  package options {
  
    interface Option {
      - description: String
      - requirement: Requirement
      - consequence: Consequence
    }
    
    class Requirement {
      - description: String
      --
      + checkRequirement(): boolean
    }
    
    class Consequence {
      - description: String
      --
      + applyConsequence(): void
    }
    
    class AllowLanding implements Option {
    }
    
    class PlaceOnStandby implements Option {
    }
    
    class EmptyRandomRunway implements Option {
    }
    
    class RescueTeam implements Option {
    }
    
    class AirRefueling implements Option {
    }
    
    class CrossWinds implements Option {
    }
    
    class IcyRunWays implements Option {
    }
    
    class IceStorm implements Option {
    }
    
    class LetThemLand implements Option {
    }
    
    class RefuseThem implements Option {
    }
    
    class AllowThemTheSpaceToProtest implements Option {
    }
    
    class GetPoliceInvolved implements Option {
    }
    
    class LetThePlanesLandAnyways implements Option {
    }
    
    class LockdownTheRunway implements Option {
    }
    
    class LetTheManGo implements Option {
    }
  
  }

  Menu -up-> Simulation
  Request -up-> Simulation
  Request "1..*" -- "2..*" Option
  Option -- Requirement
  Option -- Consequence
  Simulation -- SimulationHour
  Runway -- OccupiedTimeRemaining
  
  note top of Request : Interface or Abstract ?
  note top of Option : Interface or Abstract ?
  note "Class vs Enum ?" as N1
  
}

@enduml
